{"version":3,"sources":["upload.js","app.js"],"names":["bytesToSize","bytes","sizes","i","parseInt","Math","floor","log","round","pow","element","tag","classes","content","node","document","createElement","length","classList","add","textContent","upload","selector","options","files","input","querySelector","preview","open","style","display","multi","setAttribute","accept","Array","isArray","join","insertAdjacentElement","triggerInput","click","changeHandler","event","target","from","innerHTML","forEach","file","type","match","reader","FileReader","onload","ev","src","result","insertAdjacentHTML","name","size","readAsDataURL","removeHandler","dataset","filter","block","closest","setTimeout","remove","uploadHandler","addEventListener"],"mappings":"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","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["function bytesToSize(bytes) {\r\n   const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n   if (!bytes) return '0 Byte';\r\n   const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\r\n   return Math.round(bytes / Math.pow(1024, i)) + ' ' + sizes[i];\r\n}\r\n\r\nconst element = (tag, classes = [], content) => {\r\n  const node = document.createElement(tag)\r\n\r\n  if (classes.length) {\r\n    node.classList.add(...classes)\r\n  }\r\n  if (content) {\r\n    node.textContent = content\r\n  }\r\n  return node;\r\n}\r\n\r\n\r\nexport function upload(selector, options = {}) {\r\n  let files = [];\r\n\r\n  const input = document.querySelector(selector);\r\n  const preview = element('div', ['preview']);  \r\n  const open =  element('button', ['btn'], 'Open');\r\n  const upload = element('button', ['btn', 'primary'], 'Download');\r\n  upload.style.display = 'none';\r\n\r\n  if (options.multi){\r\n    input.setAttribute('multiple', true)\r\n  }\r\n\r\n  if (options.accept && Array.isArray(options.accept)) {\r\n    input.setAttribute('accept', options.accept.join(','))\r\n  }\r\n\r\n  input.insertAdjacentElement('afterend', preview)\r\n  input.insertAdjacentElement('afterend', upload)\r\n  input.insertAdjacentElement('afterend', open) \r\n\r\n  const triggerInput = () => input.click(); \r\n\r\n  const changeHandler = event => {\r\n    if (!event.target.files.length) {\r\n      return;\r\n    }\r\n\r\n    files = Array.from(event.target.files);\r\n\r\n    preview.innerHTML = ''; // - это означает что строка будет путса и при попытки добавить ещё картики у нас будет отчищатся окно\r\n    upload.style.display = 'inline'\r\n    files.forEach(file => {\r\n      if (!file.type.match('image')) {\r\n        return\r\n      }\r\n\r\n      // ev - event\r\n      const reader = new FileReader()\r\n      reader.onload = ev => {\r\n        const src = ev.target.result;\r\n        preview.insertAdjacentHTML('afterbegin',`\r\n          <div class=\"preview-image\">\r\n            <div class=\"preview-remove\" data-name=\"${file.name}\">&times;</div>\r\n            <img src=\"${src}\" alt=\"${file.name}\" />\r\n            <div class=\"preview-info\">\r\n              <span>${file.name}</span>\r\n              ${bytesToSize(file.size)}\r\n            </div>\r\n          </div>\r\n        `);        \r\n      }\r\n\r\n      reader.readAsDataURL(file)\r\n    })\r\n  }\r\n\r\n  const removeHandler = event => {\r\n    if (!event.target.dataset.name) {\r\n      return\r\n    }\r\n\r\n    const {name} = event.target.dataset;\r\n    files = files.filter(file => file.name !== name);\r\n\r\n    if (!files.length) {\r\n      upload.style.display ='none';\r\n    }\r\n\r\n    const block = preview\r\n    .querySelector(`[data-name=\"${name}\"]`)\r\n    .closest('.preview-image')\r\n\r\n    block.classList.add('removing');\r\n    setTimeout(() => block.remove(), 300);\r\n  }\r\n\r\n  const uploadHandler = () => {\r\n\r\n  }\r\n  \r\n  open.addEventListener('click', triggerInput);\r\n  input.addEventListener('change', changeHandler);\r\n  preview.addEventListener('click', removeHandler);\r\n  upload.addEventListener('click', uploadHandler);\r\n};","import {upload} from './upload.js'\r\n\r\nupload('#file', {\r\n  multi: true, //  позволяет загружать несколько файлов\r\n  accept: ['.png', '.jpg', '.jpeg', '.gif']\r\n})"]}